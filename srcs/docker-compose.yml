version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} " ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - transcendence

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - transcendence

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - transcendence
    volumes:
      - ./frontend:/app
    command: npm start

networks:
  transcendence:
    driver: bridge

volumes:
  postgres_data:
