version: '3.8'

services:
  db:
    container_name: db
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} " ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - transcendence

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    # command: tail -f /dev/null
    volumes:
      - ./backend:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - transcendence

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - transcendence
    volumes:
      - ./frontend:/app
    command: npm start


# ELK configuration + filebeat to collect logs
  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.9.2
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /mnt/docker-desktop-data/data/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - transcendence
    user: root
    command: filebeat -e -strict.perms=false

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - transcendence
    ports:
      - 9200:9200
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
      interval: 5s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - 5601:5601
    networks:
      - transcendence
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:7.9.2
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - 5000:5000
    networks:
      - transcendence
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  transcendence:
    driver: bridge

volumes:
  postgres_data:
  elasticsearch-data:
